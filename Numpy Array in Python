Python lists are a substitute for arrays, but they fail to deliver the performance required while computing large sets of numerical data. To address this issue we use a Python library called NumPy

Numpy stands for Numerical python
NumPy offers an array object called nparray.

Unlike lists, NumPy arrays are of fixed size, and changing the size of an array will lead to the creation of a new array while the original array will be deleted.

All the elements in an array are of the same type.
Numpy arrays are faster, more efficient, and require less syntax than standard Python sequences.

Homogeneous Data: NumPy arrays store elements of the same data type, making them more compact and memory-efficient than lists.
Fixed Data Type: NumPy arrays have a fixed data type, reducing memory overhead by eliminating the need to store type information for each element.
Contiguous Memory: NumPy arrays store elements in adjacent memory locations, reducing fragmentation and allowing for efficient access.

li = [1,2,3,4]
numpyArr = np.array(li)

